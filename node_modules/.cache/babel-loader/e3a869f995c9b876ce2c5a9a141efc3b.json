{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"F:\\\\FLOWY_2.0\\\\my-flowy\\\\src\\\\components\\\\flowy\\\\MyFlowy.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { DragDropContext, Draggable, Droppable } from 'react-beautiful-dnd'; //import uuid from 'uuid/v4';\n\nimport { v4 as uuidv4 } from 'uuid'; // leftSide bar elements\n\nconst itemsFromLeftSideBar = [{\n  id: uuidv4(),\n  content: 'update Logs'\n}, {\n  id: uuidv4(),\n  content: 'Add New Entry'\n}, {\n  id: uuidv4(),\n  content: 'Prompt an Error'\n}]; // Centre Column items\n\nconst centerColumnPage = {\n  [uuidv4()]: {\n    name: 'Blocks',\n    items: itemsFromLeftSideBar\n  },\n  [uuidv4()]: {\n    name: 'Diagram View',\n    items: []\n  }\n};\n\nconst onDragEnd = (result, columns, setColumns) => {\n  if (!result.destination) return;\n  const {\n    source,\n    destination\n  } = result;\n\n  if (source.droppableId !== destination.droppableId) {\n    const sourceColumn = columns[source.droppableId];\n    const destColumn = columns[destination.droppableId];\n    const sourceItems = [...sourceColumn.items];\n    const destItems = [...destColumn.items];\n    const [removed] = sourceItems.splice(source.index, 1);\n    destItems.splice(destination.index, 0, removed);\n    setColumns({ ...columns,\n      [source.droppableId]: { ...sourceColumn,\n        items: sourceItems\n      },\n      [destination.droppableId]: { ...destColumn,\n        items: destItems\n      }\n    });\n  } else {\n    const column = columns[source.droppableId];\n    const copiedItems = [...column.items];\n    const [removed] = copiedItems.splice(source.index, 1);\n    copiedItems.splice(destination.index, 0, removed);\n    setColumns({ ...columns,\n      [source.droppableId]: { ...column,\n        items: copiedItems\n      }\n    });\n  }\n};\n\nfunction MyFlowy() {\n  _s();\n\n  const [columns, setColumns] = useState(centerColumnPage);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      height: \"50%\"\n    },\n    children: /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: result => onDragEnd(result, columns, setColumns),\n      children: Object.entries(columns).map(([columnId, column], index) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginLeft: '-650px',\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: column.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              margin: 8\n            },\n            children: /*#__PURE__*/_jsxDEV(Droppable, {\n              droppableId: columnId,\n              children: (provided, snapshot) => {\n                return /*#__PURE__*/_jsxDEV(\"div\", { ...provided.droppableProps,\n                  ref: provided.innerRef,\n                  style: {\n                    background: snapshot.isDraggingOver ? \"lightblue\" : \"lightgrey\",\n                    padding: 4,\n                    width: 250,\n                    minHeight: 500\n                  },\n                  children: [column.items.map((item, index) => {\n                    return /*#__PURE__*/_jsxDEV(Draggable, {\n                      draggableId: item.id,\n                      index: index,\n                      children: (provided, snapshot) => {\n                        return /*#__PURE__*/_jsxDEV(\"div\", {\n                          ref: provided.innerRef,\n                          ...provided.draggableProps,\n                          ...provided.dragHandleProps,\n                          style: {\n                            userSelect: \"none\",\n                            padding: 16,\n                            margin: \"0 0 8px 0\",\n                            minHeight: \"50px\",\n                            backgroundColor: snapshot.isDragging ? \"#263B4A\" : \"#456C86\",\n                            color: \"white\",\n                            ...provided.draggableProps.style\n                          },\n                          children: item.content\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 118,\n                          columnNumber: 37\n                        }, this);\n                      }\n                    }, item.id, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 111,\n                      columnNumber: 31\n                    }, this);\n                  }), provided.placeholder]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 97,\n                  columnNumber: 25\n                }, this);\n              }\n            }, columnId, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 17\n          }, this)]\n        }, columnId, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 7\n  }, this);\n}\n\n_s(MyFlowy, \"fFfuk+dpROy7y4OwbSDsuwhulYg=\");\n\n_c = MyFlowy;\nexport default MyFlowy;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyFlowy\");","map":{"version":3,"sources":["F:/FLOWY_2.0/my-flowy/src/components/flowy/MyFlowy.js"],"names":["React","useState","DragDropContext","Draggable","Droppable","v4","uuidv4","itemsFromLeftSideBar","id","content","centerColumnPage","name","items","onDragEnd","result","columns","setColumns","destination","source","droppableId","sourceColumn","destColumn","sourceItems","destItems","removed","splice","index","column","copiedItems","MyFlowy","display","justifyContent","height","Object","entries","map","columnId","marginLeft","flexDirection","alignItems","margin","provided","snapshot","droppableProps","innerRef","background","isDraggingOver","padding","width","minHeight","item","draggableProps","dragHandleProps","userSelect","backgroundColor","isDragging","color","style","placeholder"],"mappings":"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","sourcesContent":["import React,{useState} from 'react';\r\nimport {DragDropContext,Draggable,Droppable} from 'react-beautiful-dnd';\r\n//import uuid from 'uuid/v4';\r\n\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\n// leftSide bar elements\r\nconst itemsFromLeftSideBar = [\r\n    {\r\n        id: uuidv4(),\r\n        content: 'update Logs'\r\n    },\r\n    {\r\n        id: uuidv4(),\r\n        content: 'Add New Entry'\r\n    },\r\n    {\r\n        id: uuidv4(),\r\n        content: 'Prompt an Error'\r\n    }\r\n];\r\n\r\n// Centre Column items\r\nconst centerColumnPage = {\r\n    [uuidv4()]: {\r\n        name:'Blocks',\r\n        items: itemsFromLeftSideBar\r\n    },\r\n\r\n    [uuidv4()]: {\r\n        name: 'Diagram View',\r\n        items: []\r\n    }\r\n};\r\n\r\n\r\nconst onDragEnd = (result, columns, setColumns) => {\r\n    if (!result.destination) return;\r\n    const { source, destination } = result;\r\n  \r\n    if (source.droppableId !== destination.droppableId) {\r\n      const sourceColumn = columns[source.droppableId];\r\n      const destColumn = columns[destination.droppableId];\r\n      const sourceItems = [...sourceColumn.items];\r\n      const destItems = [...destColumn.items];\r\n      const [removed] = sourceItems.splice(source.index, 1);\r\n      destItems.splice(destination.index, 0, removed);\r\n      setColumns({\r\n        ...columns,\r\n        [source.droppableId]: {\r\n          ...sourceColumn,\r\n          items: sourceItems\r\n        },\r\n        [destination.droppableId]: {\r\n          ...destColumn,\r\n          items: destItems\r\n        }\r\n      });\r\n    } else {\r\n      const column = columns[source.droppableId];\r\n      const copiedItems = [...column.items];\r\n      const [removed] = copiedItems.splice(source.index, 1);\r\n      copiedItems.splice(destination.index, 0, removed);\r\n      setColumns({\r\n        ...columns,\r\n        [source.droppableId]: {\r\n          ...column,\r\n          items: copiedItems\r\n        }\r\n      });\r\n    }\r\n  };\r\n  \r\n  function MyFlowy() {\r\n    const [columns, setColumns] = useState(centerColumnPage);\r\n    return (\r\n      <div style={{ display: \"flex\", justifyContent: \"center\", height: \"50%\" }}>\r\n        <DragDropContext\r\n          onDragEnd={result => onDragEnd(result, columns, setColumns)}\r\n        >\r\n          {Object.entries(columns).map(([columnId, column], index) => {\r\n            return (\r\n              <div\r\n                style={{\r\n                  marginLeft:'-650px',\r\n                  display: \"flex\",\r\n                  flexDirection: \"column\",\r\n                  alignItems: \"center\"\r\n                }}\r\n                key={columnId}\r\n              >\r\n                <h2>{column.name}</h2>\r\n                <div style={{ margin: 8 }}>\r\n                  <Droppable droppableId={columnId} key={columnId}>\r\n                    {(provided, snapshot) => {\r\n                      return (\r\n                        <div\r\n                          {...provided.droppableProps}\r\n                          ref={provided.innerRef}\r\n                          style={{\r\n                            background: snapshot.isDraggingOver\r\n                              ? \"lightblue\"\r\n                              : \"lightgrey\",\r\n                            padding: 4,\r\n                            width: 250,\r\n                            minHeight: 500\r\n                          }}\r\n                        >\r\n                          {column.items.map((item, index) => {\r\n                            return (\r\n                              <Draggable\r\n                                key={item.id}\r\n                                draggableId={item.id}\r\n                                index={index}\r\n                              >\r\n                                {(provided, snapshot) => {\r\n                                  return (\r\n                                    <div\r\n                                      ref={provided.innerRef}\r\n                                      {...provided.draggableProps}\r\n                                      {...provided.dragHandleProps}\r\n                                      style={{\r\n                                        userSelect: \"none\",\r\n                                        padding: 16,\r\n                                        margin: \"0 0 8px 0\",\r\n                                        minHeight: \"50px\",\r\n                                        backgroundColor: snapshot.isDragging\r\n                                          ? \"#263B4A\"\r\n                                          : \"#456C86\",\r\n                                        color: \"white\",\r\n                                        ...provided.draggableProps.style\r\n                                      }}\r\n                                    >\r\n                                      {item.content}\r\n                                    </div>\r\n                                  );\r\n                                }}\r\n                              </Draggable>\r\n                            );\r\n                          })}\r\n                          {provided.placeholder}\r\n                        </div>\r\n                      );\r\n                    }}\r\n                  </Droppable>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </DragDropContext>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  export default MyFlowy;\r\n  \r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}