{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"F:\\\\FLOWY_2.0\\\\my-flowy\\\\src\\\\components\\\\flowy\\\\MyFlowy.js\";\nimport React, { Component } from 'react';\nimport uuid from 'uuid/dist/v4';\nimport styled from 'styled-components';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd'; // a little function to help us with reordering the result\n\nconst reorder = (list, startIndex, endIndex) => {\n  const result = Array.from(list);\n  const [removed] = result.splice(startIndex, 1);\n  result.splice(endIndex, 0, removed);\n  return result;\n};\n/**\r\n * Moves an item from one list to another list.\r\n */\n\n\nconst copy = (source, destination, droppableSource, droppableDestination) => {\n  console.log('==> dest', destination);\n  const sourceClone = Array.from(source);\n  const destClone = Array.from(destination);\n  const item = sourceClone[droppableSource.index];\n  destClone.splice(droppableDestination.index, 0, { ...item,\n    id: uuid()\n  });\n  return destClone;\n};\n\nconst move = (source, destination, droppableSource, droppableDestination) => {\n  const sourceClone = Array.from(source);\n  const destClone = Array.from(destination);\n  const [removed] = sourceClone.splice(droppableSource.index, 1);\n  destClone.splice(droppableDestination.index, 0, removed);\n  const result = {};\n  result[droppableSource.droppableId] = sourceClone;\n  result[droppableDestination.droppableId] = destClone;\n  return result;\n};\n\nconst Content = styled.div`\n    margin-right: 200px;\n`;\n_c = Content;\nconst Item = styled.div`\n    display: flex;\n    user-select: none;\n    padding: 0.5rem;\n    margin: 0 0 0.5rem 0;\n    align-items: flex-start;\n    align-content: flex-start;\n    line-height: 1.5;\n    border-radius: 3px;\n    background: #fff;\n    border: 1px ${props => props.isDragging ? 'dashed #4099ff' : 'solid #ddd'};\n`;\n_c2 = Item;\nconst Clone = styled(Item)`\n    + div {\n        display: none !important;\n    }\n`;\n_c3 = Clone;\nconst Handle = styled.div`\n    display: flex;\n    align-items: center;\n    align-content: center;\n    user-select: none;\n    margin: -0.5rem 0.5rem -0.5rem -0.5rem;\n    padding: 0.5rem;\n    line-height: 1.5;\n    border-radius: 3px 0 0 3px;\n    background: #fff;\n    border-right: 1px solid #ddd;\n    color: #000;\n`;\n_c4 = Handle;\nconst List = styled.div`\n    border: 1px\n        ${props => props.isDraggingOver ? 'dashed #000' : 'solid #ddd'};\n    background: #fff;\n    padding: 0.5rem 0.5rem 0;\n    border-radius: 3px;\n    flex: 0 0 150px;\n    font-family: sans-serif;\n`;\nconst Kiosk = styled(List)`\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    width: 200px;\n`;\n_c5 = Kiosk;\nconst Container = styled(List)`\n    margin: 0.5rem 0.5rem 1.5rem;\n    background: #ccc;\n`;\n_c6 = Container;\nconst Notice = styled.div`\n    display: flex;\n    align-items: center;\n    align-content: center;\n    justify-content: center;\n    padding: 0.5rem;\n    margin: 0 0.5rem 0.5rem;\n    border: 1px solid transparent;\n    line-height: 1.5;\n    color: #aaa;\n`;\n_c7 = Notice;\nconst Button = styled.button`\n    display: flex;\n    align-items: center;\n    align-content: center;\n    justify-content: center;\n    margin: 0.5rem;\n    padding: 0.5rem;\n    color: #000;\n    border: 1px solid #ddd;\n    background: #fff;\n    border-radius: 3px;\n    font-size: 1rem;\n    cursor: pointer;\n`;\n_c8 = Button;\nconst ButtonText = styled.div`\n    margin: 0 1rem;\n`;\n_c9 = ButtonText;\nconst ITEMS = [{\n  id: uuid(),\n  content: 'New Visitor'\n}, {\n  id: uuid(),\n  content: 'Action is Performed'\n}, {\n  id: uuid(),\n  content: 'Time has Passed'\n}, {\n  id: uuid(),\n  content: 'Error Prompt'\n}, {\n  id: uuid(),\n  content: 'New Database'\n}, {\n  id: uuid(),\n  content: 'Update Database'\n}, {\n  id: uuid(),\n  content: 'Make a Tweet'\n}];\n\nclass MyFlowy extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      [uuid()]: []\n    };\n\n    this.onDragEnd = result => {\n      const {\n        source,\n        destination\n      } = result;\n      console.log('==> result', result); // dropped outside the list\n\n      if (!destination) {\n        return;\n      }\n\n      switch (source.droppableId) {\n        case destination.droppableId:\n          this.setState({\n            [destination.droppableId]: reorder(this.state[source.droppableId], source.index, destination.index)\n          });\n          break;\n\n        case 'ITEMS':\n          this.setState({\n            [destination.droppableId]: copy(ITEMS, this.state[destination.droppableId], source, destination)\n          });\n          break;\n\n        default:\n          this.setState(move(this.state[source.droppableId], this.state[destination.droppableId], source, destination));\n          break;\n      }\n    };\n\n    this.addList = e => {\n      this.setState({\n        [uuid()]: []\n      });\n    };\n  }\n\n  // Normally you would want to split things out into separate components.\n  // But in this example everything is just done in one place for simplicity\n  render() {\n    return /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: this.onDragEnd,\n      children: [/*#__PURE__*/_jsxDEV(Droppable, {\n        droppableId: \"ITEMS\",\n        isDropDisabled: true,\n        children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(Kiosk, {\n          ref: provided.innerRef,\n          isDraggingOver: snapshot.isDraggingOver,\n          children: ITEMS.map((item, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n            draggableId: item.id,\n            index: index,\n            children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Item, {\n                ref: provided.innerRef,\n                ...provided.draggableProps,\n                ...provided.dragHandleProps,\n                isDragging: snapshot.isDragging,\n                style: provided.draggableProps.style,\n                children: item.content\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 233,\n                columnNumber: 45\n              }, this), snapshot.isDragging && /*#__PURE__*/_jsxDEV(Clone, {\n                children: item.content\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 49\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 41\n            }, this)\n          }, item.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Content, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: this.addList,\n          children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n            width: \"24\",\n            height: \"24\",\n            viewBox: \"0 0 24 24\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              fill: \"currentColor\",\n              d: \"M19,13H13V19H11V13H5V11H11V5H13V11H19V13Z\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ButtonText, {\n            children: \"Triggers\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: this.addList,\n          children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n            width: \"24\",\n            height: \"24\",\n            viewBox: \"0 0 24 24\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              fill: \"currentColor\",\n              d: \"M19,13H13V19H11V13H5V11H11V5H13V11H19V13Z\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ButtonText, {\n            children: \"Loggers\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: this.addList,\n          children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n            width: \"24\",\n            height: \"24\",\n            viewBox: \"0 0 24 24\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              fill: \"currentColor\",\n              d: \"M19,13H13V19H11V13H5V11H11V5H13V11H19V13Z\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ButtonText, {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 21\n        }, this), Object.keys(this.state).map((list, i) => {\n          console.log('==> list', list);\n          return /*#__PURE__*/_jsxDEV(Droppable, {\n            droppableId: list,\n            children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(Container, {\n              ref: provided.innerRef,\n              isDraggingOver: snapshot.isDraggingOver,\n              children: [this.state[list].length ? this.state[list].map((item, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n                draggableId: item.id,\n                index: index,\n                children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(Item, {\n                  ref: provided.innerRef,\n                  ...provided.draggableProps,\n                  isDragging: snapshot.isDragging,\n                  style: provided.draggableProps.style,\n                  children: [/*#__PURE__*/_jsxDEV(Handle, { ...provided.dragHandleProps,\n                    children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                      width: \"24\",\n                      height: \"24\",\n                      viewBox: \"0 0 24 24\",\n                      children: /*#__PURE__*/_jsxDEV(\"path\", {\n                        fill: \"currentColor\",\n                        d: \"M3,15H21V13H3V15M3,19H21V17H3V19M3,11H21V9H3V11M3,5V7H21V5H3Z\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 322,\n                        columnNumber: 75\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 318,\n                      columnNumber: 71\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 316,\n                    columnNumber: 67\n                  }, this), item.content]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 303,\n                  columnNumber: 63\n                }, this)\n              }, item.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 295,\n                columnNumber: 55\n              }, this)) : !provided.placeholder && /*#__PURE__*/_jsxDEV(Notice, {\n                children: \"Drop items here\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 335,\n                columnNumber: 51\n              }, this), provided.placeholder]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 37\n            }, this)\n          }, list, false, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 29\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default MyFlowy;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9;\n\n$RefreshReg$(_c, \"Content\");\n$RefreshReg$(_c2, \"Item\");\n$RefreshReg$(_c3, \"Clone\");\n$RefreshReg$(_c4, \"Handle\");\n$RefreshReg$(_c5, \"Kiosk\");\n$RefreshReg$(_c6, \"Container\");\n$RefreshReg$(_c7, \"Notice\");\n$RefreshReg$(_c8, \"Button\");\n$RefreshReg$(_c9, \"ButtonText\");","map":{"version":3,"sources":["F:/FLOWY_2.0/my-flowy/src/components/flowy/MyFlowy.js"],"names":["React","Component","uuid","styled","DragDropContext","Droppable","Draggable","reorder","list","startIndex","endIndex","result","Array","from","removed","splice","copy","source","destination","droppableSource","droppableDestination","console","log","sourceClone","destClone","item","index","id","move","droppableId","Content","div","Item","props","isDragging","Clone","Handle","List","isDraggingOver","Kiosk","Container","Notice","Button","button","ButtonText","ITEMS","content","MyFlowy","state","onDragEnd","setState","addList","e","render","provided","snapshot","innerRef","map","draggableProps","dragHandleProps","style","Object","keys","i","length","placeholder"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport uuid from 'uuid/dist/v4'\r\nimport styled from 'styled-components';\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\n\r\n\r\n// a little function to help us with reordering the result\r\nconst reorder = (list, startIndex, endIndex) => {\r\n    const result = Array.from(list);\r\n    const [removed] = result.splice(startIndex, 1);\r\n    result.splice(endIndex, 0, removed);\r\n\r\n    return result;\r\n};\r\n/**\r\n * Moves an item from one list to another list.\r\n */\r\nconst copy = (source, destination, droppableSource, droppableDestination) => {\r\n    console.log('==> dest', destination);\r\n\r\n    const sourceClone = Array.from(source);\r\n    const destClone = Array.from(destination);\r\n    const item = sourceClone[droppableSource.index];\r\n\r\n    destClone.splice(droppableDestination.index, 0, { ...item, id: uuid() });\r\n    return destClone;\r\n};\r\n\r\nconst move = (source, destination, droppableSource, droppableDestination) => {\r\n    const sourceClone = Array.from(source);\r\n    const destClone = Array.from(destination);\r\n    const [removed] = sourceClone.splice(droppableSource.index, 1);\r\n\r\n    destClone.splice(droppableDestination.index, 0, removed);\r\n\r\n    const result = {};\r\n    result[droppableSource.droppableId] = sourceClone;\r\n    result[droppableDestination.droppableId] = destClone;\r\n\r\n    return result;\r\n};\r\n\r\nconst Content = styled.div`\r\n    margin-right: 200px;\r\n`;\r\n\r\nconst Item = styled.div`\r\n    display: flex;\r\n    user-select: none;\r\n    padding: 0.5rem;\r\n    margin: 0 0 0.5rem 0;\r\n    align-items: flex-start;\r\n    align-content: flex-start;\r\n    line-height: 1.5;\r\n    border-radius: 3px;\r\n    background: #fff;\r\n    border: 1px ${props => (props.isDragging ? 'dashed #4099ff' : 'solid #ddd')};\r\n`;\r\n\r\nconst Clone = styled(Item)`\r\n    + div {\r\n        display: none !important;\r\n    }\r\n`;\r\n\r\nconst Handle = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    align-content: center;\r\n    user-select: none;\r\n    margin: -0.5rem 0.5rem -0.5rem -0.5rem;\r\n    padding: 0.5rem;\r\n    line-height: 1.5;\r\n    border-radius: 3px 0 0 3px;\r\n    background: #fff;\r\n    border-right: 1px solid #ddd;\r\n    color: #000;\r\n`;\r\n\r\nconst List = styled.div`\r\n    border: 1px\r\n        ${props => (props.isDraggingOver ? 'dashed #000' : 'solid #ddd')};\r\n    background: #fff;\r\n    padding: 0.5rem 0.5rem 0;\r\n    border-radius: 3px;\r\n    flex: 0 0 150px;\r\n    font-family: sans-serif;\r\n`;\r\n\r\nconst Kiosk = styled(List)`\r\n    position: absolute;\r\n    top: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    width: 200px;\r\n`;\r\n\r\nconst Container = styled(List)`\r\n    margin: 0.5rem 0.5rem 1.5rem;\r\n    background: #ccc;\r\n`;\r\n\r\nconst Notice = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    align-content: center;\r\n    justify-content: center;\r\n    padding: 0.5rem;\r\n    margin: 0 0.5rem 0.5rem;\r\n    border: 1px solid transparent;\r\n    line-height: 1.5;\r\n    color: #aaa;\r\n`;\r\n\r\nconst Button = styled.button`\r\n    display: flex;\r\n    align-items: center;\r\n    align-content: center;\r\n    justify-content: center;\r\n    margin: 0.5rem;\r\n    padding: 0.5rem;\r\n    color: #000;\r\n    border: 1px solid #ddd;\r\n    background: #fff;\r\n    border-radius: 3px;\r\n    font-size: 1rem;\r\n    cursor: pointer;\r\n`;\r\n\r\nconst ButtonText = styled.div`\r\n    margin: 0 1rem;\r\n`;\r\n\r\nconst ITEMS = [\r\n    {\r\n        id: uuid(),\r\n        content: 'New Visitor'\r\n    },\r\n    {\r\n        id: uuid(),\r\n        content: 'Action is Performed'\r\n    },\r\n    {\r\n        id: uuid(),\r\n        content: 'Time has Passed'\r\n    },\r\n    {\r\n        id: uuid(),\r\n        content: 'Error Prompt'\r\n    },\r\n    {\r\n        id: uuid(),\r\n        content: 'New Database'\r\n    },\r\n    {\r\n      id: uuid(),\r\n      content: 'Update Database'\r\n  },\r\n  {\r\n    id: uuid(),\r\n    content: 'Make a Tweet'\r\n}\r\n];\r\n\r\nclass MyFlowy extends Component {\r\n    state = {\r\n        [uuid()]: []\r\n    };\r\n    onDragEnd = result => {\r\n        const { source, destination } = result;\r\n\r\n        console.log('==> result', result);\r\n\r\n        // dropped outside the list\r\n        if (!destination) {\r\n            return;\r\n        }\r\n\r\n        switch (source.droppableId) {\r\n            case destination.droppableId:\r\n                this.setState({\r\n                    [destination.droppableId]: reorder(\r\n                        this.state[source.droppableId],\r\n                        source.index,\r\n                        destination.index\r\n                    )\r\n                });\r\n                break;\r\n            case 'ITEMS':\r\n                this.setState({\r\n                    [destination.droppableId]: copy(\r\n                        ITEMS,\r\n                        this.state[destination.droppableId],\r\n                        source,\r\n                        destination\r\n                    )\r\n                });\r\n                break;\r\n            default:\r\n                this.setState(\r\n                    move(\r\n                        this.state[source.droppableId],\r\n                        this.state[destination.droppableId],\r\n                        source,\r\n                        destination\r\n                    )\r\n                );\r\n                break;\r\n        }\r\n    };\r\n\r\n    addList = e => {\r\n        this.setState({ [uuid()]: [] });\r\n    };\r\n\r\n    // Normally you would want to split things out into separate components.\r\n    // But in this example everything is just done in one place for simplicity\r\n    render() {\r\n        return (\r\n            <DragDropContext onDragEnd={this.onDragEnd}>\r\n                <Droppable droppableId=\"ITEMS\" isDropDisabled={true}>\r\n                    {(provided, snapshot) => (\r\n                        <Kiosk\r\n                            ref={provided.innerRef}\r\n                            isDraggingOver={snapshot.isDraggingOver}>\r\n                            {ITEMS.map((item, index) => (\r\n                                <Draggable\r\n                                    key={item.id}\r\n                                    draggableId={item.id}\r\n                                    index={index}>\r\n                                    {(provided, snapshot) => (\r\n                                        <React.Fragment>\r\n                                            <Item\r\n                                                ref={provided.innerRef}\r\n                                                {...provided.draggableProps}\r\n                                                {...provided.dragHandleProps}\r\n                                                isDragging={snapshot.isDragging}\r\n                                                style={\r\n                                                    provided.draggableProps\r\n                                                        .style\r\n                                                }>\r\n                                                {item.content}\r\n                                            </Item>\r\n                                            {snapshot.isDragging && (\r\n                                                <Clone>{item.content}</Clone>\r\n                                            )}\r\n                                        </React.Fragment>\r\n                                    )}\r\n                                </Draggable>\r\n                            ))}\r\n                        </Kiosk>\r\n                    )}\r\n                </Droppable>\r\n                <Content>\r\n                    <Button onClick={this.addList}>\r\n                        <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\r\n                            <path\r\n                                fill=\"currentColor\"\r\n                                d=\"M19,13H13V19H11V13H5V11H11V5H13V11H19V13Z\"\r\n                            />\r\n                        </svg>\r\n                        <ButtonText>Triggers</ButtonText>\r\n                    </Button>\r\n                    <Button onClick={this.addList}>\r\n                        <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\r\n                            <path\r\n                                fill=\"currentColor\"\r\n                                d=\"M19,13H13V19H11V13H5V11H11V5H13V11H19V13Z\"\r\n                            />\r\n                        </svg>\r\n                        <ButtonText>Loggers</ButtonText>\r\n                    </Button>\r\n                    <Button onClick={this.addList}>\r\n                        <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\r\n                            <path\r\n                                fill=\"currentColor\"\r\n                                d=\"M19,13H13V19H11V13H5V11H11V5H13V11H19V13Z\"\r\n                            />\r\n                        </svg>\r\n                        <ButtonText>Actions</ButtonText>\r\n                    </Button>\r\n                    {Object.keys(this.state).map((list, i) => {\r\n                        console.log('==> list', list);\r\n                        return (\r\n                            <Droppable key={list} droppableId={list}>\r\n                                {(provided, snapshot) => (\r\n                                    <Container\r\n                                        ref={provided.innerRef}\r\n                                        isDraggingOver={\r\n                                            snapshot.isDraggingOver\r\n                                        }>\r\n                                        {this.state[list].length\r\n                                            ? this.state[list].map(\r\n                                                  (item, index) => (\r\n                                                      <Draggable\r\n                                                          key={item.id}\r\n                                                          draggableId={item.id}\r\n                                                          index={index}>\r\n                                                          {(\r\n                                                              provided,\r\n                                                              snapshot\r\n                                                          ) => (\r\n                                                              <Item\r\n                                                                  ref={\r\n                                                                      provided.innerRef\r\n                                                                  }\r\n                                                                  {...provided.draggableProps}\r\n                                                                  isDragging={\r\n                                                                      snapshot.isDragging\r\n                                                                  }\r\n                                                                  style={\r\n                                                                      provided\r\n                                                                          .draggableProps\r\n                                                                          .style\r\n                                                                  }>\r\n                                                                  <Handle\r\n                                                                      {...provided.dragHandleProps}>\r\n                                                                      <svg\r\n                                                                          width=\"24\"\r\n                                                                          height=\"24\"\r\n                                                                          viewBox=\"0 0 24 24\">\r\n                                                                          <path\r\n                                                                              fill=\"currentColor\"\r\n                                                                              d=\"M3,15H21V13H3V15M3,19H21V17H3V19M3,11H21V9H3V11M3,5V7H21V5H3Z\"\r\n                                                                          />\r\n                                                                      </svg>\r\n                                                                  </Handle>\r\n                                                                  {item.content}\r\n                                                              </Item>\r\n                                                          )}\r\n                                                      </Draggable>\r\n                                                  )\r\n                                              )\r\n                                            : !provided.placeholder && (\r\n                                                  <Notice>\r\n                                                      Drop items here\r\n                                                  </Notice>\r\n                                              )}\r\n                                        {provided.placeholder}\r\n                                    </Container>\r\n                                )}\r\n                            </Droppable>\r\n                        );\r\n                    })}\r\n                </Content>\r\n            </DragDropContext>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MyFlowy;\r\n"]},"metadata":{},"sourceType":"module"}