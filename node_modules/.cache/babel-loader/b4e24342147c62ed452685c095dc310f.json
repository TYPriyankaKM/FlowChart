{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"F:\\\\FLOWY_2.0\\\\empty prjt\\\\src\\\\components\\\\flowchart\\\\Node.component.jsx\";\nimport React from 'react';\nimport ReactFlow from 'react-flow-renderer'; // to fill initial elements  \n\nconst initialElements = [{\n  id: '1',\n  type: 'input',\n  data: {\n    label: 'Node'\n  },\n  position: {\n    x: 0,\n    y: 0\n  }\n}];\n\nconst MyFlow = () => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ReactFlow, {\n      elements: initialElements,\n      style: {\n        width: '100%',\n        height: '90vh'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        children: \"Add Node\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true);\n};\n\n_c = MyFlow;\nexport default MyFlow;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyFlow\");","map":{"version":3,"sources":["F:/FLOWY_2.0/empty prjt/src/components/flowchart/Node.component.jsx"],"names":["React","ReactFlow","initialElements","id","type","data","label","position","x","y","MyFlow","width","height"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,qBAAtB,C,CAIA;;AACA,MAAMC,eAAe,GAAG,CACpB;AAACC,EAAAA,EAAE,EAAC,GAAJ;AAASC,EAAAA,IAAI,EAAC,OAAd;AAAuBC,EAAAA,IAAI,EAAC;AAACC,IAAAA,KAAK,EAAC;AAAP,GAA5B;AAA4CC,EAAAA,QAAQ,EAAE;AAACC,IAAAA,CAAC,EAAC,CAAH;AAAKC,IAAAA,CAAC,EAAC;AAAP;AAAtD,CADoB,CAAxB;;AAGA,MAAMC,MAAM,GAAG,MAAM;AACjB,sBACI;AAAA,4BACD,QAAC,SAAD;AACA,MAAA,QAAQ,EAAER,eADV;AAEA,MAAA,KAAK,EAAE;AAACS,QAAAA,KAAK,EAAC,MAAP;AAAeC,QAAAA,MAAM,EAAC;AAAtB;AAFP;AAAA;AAAA;AAAA;AAAA,YADC,eAOR;AAAA,8BACI;AAAO,QAAA,IAAI,EAAC,MAAZ;AACA,QAAA,IAAI,EAAC;AADL;AAAA;AAAA;AAAA;AAAA,cADJ,eAII;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAPQ;AAAA,kBADJ;AAiBH,CAlBD;;KAAMF,M;AAoBN,eAAeA,MAAf","sourcesContent":["import React from 'react'\r\nimport ReactFlow from 'react-flow-renderer';\r\n\r\n\r\n\r\n// to fill initial elements  \r\nconst initialElements = [\r\n    {id:'1', type:'input', data:{label:'Node'}, position: {x:0,y:0}}\r\n]\r\nconst MyFlow = () => {\r\n    return (\r\n        <>\r\n       <ReactFlow\r\n       elements={initialElements}\r\n       style={{width:'100%', height:'90vh'}}/>\r\n\r\n\r\n\r\n<div>\r\n    <input type=\"text\"\r\n    name=\"title\"/>\r\n\r\n    <button type=\"button\">Add Node</button>\r\n</div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MyFlow;"]},"metadata":{},"sourceType":"module"}