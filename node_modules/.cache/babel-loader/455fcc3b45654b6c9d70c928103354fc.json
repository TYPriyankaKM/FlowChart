{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"F:\\\\FLOWY_2.0\\\\empty prjt\\\\src\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css'; //import App from './App';\n\nimport reportWebVitals from './reportWebVitals';\nimport ReactFlow, { ReactFlowProvider, addEdge, removeElements, Controls } from 'react-flow-renderer';\nimport Sidebar from './Sidebar'; // import './dnd.css';\n\nconst initialElements = [{\n  id: '1',\n  type: 'input',\n  data: {\n    label: 'input node'\n  },\n  position: {\n    x: 250,\n    y: 5\n  }\n}];\nlet id = 0;\n\nconst getId = () => `dndnode_${id++}`;\n\nconst DnDFlow = () => {\n  _s();\n\n  const reactFlowWrapper = useRef(null);\n  const [reactFlowInstance, setReactFlowInstance] = useState(null);\n  const [elements, setElements] = useState(initialElements);\n\n  const onConnect = params => setElements(els => addEdge(params, els));\n\n  const onElementsRemove = elementsToRemove => setElements(els => removeElements(elementsToRemove, els));\n\n  const onLoad = _reactFlowInstance => setReactFlowInstance(_reactFlowInstance);\n\n  const onDragOver = event => {\n    event.preventDefault();\n    event.dataTransfer.dropEffect = 'move';\n  };\n\n  const onDrop = event => {\n    event.preventDefault();\n    const reactFlowBounds = reactFlowWrapper.current.getBoundingClientRect();\n    const type = event.dataTransfer.getData('application/reactflow');\n    const position = reactFlowInstance.project({\n      x: event.clientX - reactFlowBounds.left,\n      y: event.clientY - reactFlowBounds.top\n    });\n    const newNode = {\n      id: getId(),\n      type,\n      position,\n      data: {\n        label: `${type} node`\n      }\n    };\n    setElements(es => es.concat(newNode));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dndflow\",\n    children: /*#__PURE__*/_jsxDEV(ReactFlowProvider, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"reactflow-wrapper\",\n        ref: reactFlowWrapper,\n        children: /*#__PURE__*/_jsxDEV(ReactFlow, {\n          elements: elements,\n          onConnect: onConnect,\n          onElementsRemove: onElementsRemove,\n          onLoad: onLoad,\n          onDrop: onDrop,\n          onDragOver: onDragOver,\n          children: /*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DnDFlow, \"t0Pmcgj3+nKbdYNPuwo8wbQmUCM=\");\n\n_c = DnDFlow;\nexport default DnDFlow;\nReactDOM.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 88,\n  columnNumber: 3\n}, this), document.getElementById('root')); // If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\nreportWebVitals();\n\nvar _c;\n\n$RefreshReg$(_c, \"DnDFlow\");","map":{"version":3,"sources":["F:/FLOWY_2.0/empty prjt/src/index.js"],"names":["React","useState","useRef","ReactDOM","reportWebVitals","ReactFlow","ReactFlowProvider","addEdge","removeElements","Controls","Sidebar","initialElements","id","type","data","label","position","x","y","getId","DnDFlow","reactFlowWrapper","reactFlowInstance","setReactFlowInstance","elements","setElements","onConnect","params","els","onElementsRemove","elementsToRemove","onLoad","_reactFlowInstance","onDragOver","event","preventDefault","dataTransfer","dropEffect","onDrop","reactFlowBounds","current","getBoundingClientRect","getData","project","clientX","left","clientY","top","newNode","es","concat","render","document","getElementById"],"mappings":"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","sourcesContent":["import React,{ useState, useRef } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n//import App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport ReactFlow, {\n  ReactFlowProvider,\n  addEdge,\n  removeElements,\n  Controls,\n} from 'react-flow-renderer';\nimport Sidebar from './Sidebar'\n// import './dnd.css';\n\nconst initialElements = [\n  {\n    id: '1',\n    type: 'input',\n    data: { label: 'input node' },\n    position: { x: 250, y: 5 },\n  },\n];\nlet id = 0;\nconst getId = () => `dndnode_${id++}`;\nconst DnDFlow = () => {\n  const reactFlowWrapper = useRef(null);\n  const [reactFlowInstance, setReactFlowInstance] = useState(null);\n  const [elements, setElements] = useState(initialElements);\n  const onConnect = (params) => setElements((els) => addEdge(params, els));\n  const onElementsRemove = (elementsToRemove) =>\n    setElements((els) => removeElements(elementsToRemove, els));\n  const onLoad = (_reactFlowInstance) =>\n    setReactFlowInstance(_reactFlowInstance);\n  const onDragOver = (event) => {\n    event.preventDefault();\n    event.dataTransfer.dropEffect = 'move';\n  };\n  const onDrop = (event) => {\n    event.preventDefault();\n    const reactFlowBounds = reactFlowWrapper.current.getBoundingClientRect();\n    const type = event.dataTransfer.getData('application/reactflow');\n    const position = reactFlowInstance.project({\n      x: event.clientX - reactFlowBounds.left,\n      y: event.clientY - reactFlowBounds.top,\n    });\n    const newNode = {\n      id: getId(),\n      type,\n      position,\n      data: { label: `${type} node` },\n    };\n    setElements((es) => es.concat(newNode));\n  };\n  return (\n    <div className=\"dndflow\">\n      <ReactFlowProvider>\n        <div className=\"reactflow-wrapper\" ref={reactFlowWrapper}>\n          <ReactFlow\n            elements={elements}\n            onConnect={onConnect}\n            onElementsRemove={onElementsRemove}\n            onLoad={onLoad}\n            onDrop={onDrop}\n            onDragOver={onDragOver}\n          >\n            <Controls />\n          </ReactFlow>\n        </div>\n        <Sidebar />\n      </ReactFlowProvider>\n    </div>\n  );\n};\nexport default DnDFlow;\n\n\n\n\n\n\n\n\n\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"]},"metadata":{},"sourceType":"module"}